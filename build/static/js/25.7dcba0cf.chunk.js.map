{"version":3,"sources":["components/sections/register/Content.js","components/pages/Register.js"],"names":["Content","handleSubmit","event","a","preventDefault","state","displayName","email","password","confirmPassword","is_superuser","is_active","alert","props","register","setState","error","console","log","message","action","handleChange","target","name","value","this","className","onSubmit","type","placeholder","onChange","to","style","backgroundImage","Component","connect","isAuthenticated","auth","Register","redirect","content"],"mappings":"0PASMA,E,kDACJ,aAAe,IAAD,8BACZ,gBAYFC,aAbc,uCAaC,WAAMC,GAAN,2BAAAC,EAAA,yDACbD,EAAME,iBADO,EAUT,EAAKC,MANPC,EAJW,EAIXA,YACAC,EALW,EAKXA,MACAC,EANW,EAMXA,SACAC,EAPW,EAOXA,gBACAC,EARW,EAQXA,aACAC,EATW,EASXA,UAGEH,IAAaC,EAZJ,uBAaXG,MAAM,6GAbK,0BAgBb,EAAKC,MAAMC,SAASP,EAAOC,EAAUF,EAAaI,EAAcC,GAG9D,EAAKI,SAAS,CACZT,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KAGf,EAAKI,MAAMG,MAGbC,QAAQC,IAAI,EAAKL,MAAMG,MAAMG,SAF7B,EAAKN,MAAMO,SA3BF,2CAbD,wDA8CdC,aAAe,SAAAnB,GAAU,IAAD,EACEA,EAAMoB,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MAEd,EAAKT,SAAL,eAAiBQ,EAAOC,KA9CxB,EAAKnB,MAAQ,CACXC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,cAAc,EACdC,WAAW,GATD,E,qDAoDJ,IAAD,EACmDc,KAAKpB,MAAvDC,EADD,EACCA,YAAaC,EADd,EACcA,MAAOC,EADrB,EACqBA,SAAUC,EAD/B,EAC+BA,gBACtC,OACE,sBAAKiB,UAAU,qBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBAAMC,SAAUF,KAAKxB,aAArB,UACE,sBAAKyB,UAAU,YAAf,UACE,gJACA,4sBAMF,sBAAKA,UAAU,aAAf,UACE,2JACA,uBACEE,KAAK,OACLF,UAAU,kCACVG,YAAY,0DACZN,KAAK,cACLO,SAAUL,KAAKJ,aACfG,MAAOlB,OAGX,sBAAKoB,UAAU,aAAf,UACE,qKACA,uBACEE,KAAK,QACLF,UAAU,kCACVG,YAAY,QACZN,KAAK,QACLO,SAAUL,KAAKJ,aACfG,MAAOjB,OAGX,sBAAKmB,UAAU,aAAf,UACE,yEACA,uBACEE,KAAK,WACLF,UAAU,kCACVG,YAAY,uCACZN,KAAK,WACLO,SAAUL,KAAKJ,aACfG,MAAOhB,OAGX,sBAAKkB,UAAU,aAAf,UACE,4IACA,uBACEE,KAAK,WACLF,UAAU,kCACVG,YAAY,6EACZN,KAAK,kBACLO,SAAUL,KAAKJ,aACfG,MAAOf,OAGX,wBAAQmB,KAAK,SAASF,UAAU,iCAAhC,gFAGA,qBAAKA,UAAU,iBAAf,SACE,2BAGF,oBAAGA,UAAU,mBAAb,kIACwB,cAAC,IAAD,CAAMK,GAAG,SAAT,wDAAiC,YAI7D,qBACEL,UAAU,cACVM,MAAO,CAAEC,gBAAgB,gD,GA7HbC,aAyIPC,eALS,SAAA9B,GAAK,MAAK,CAChC+B,gBAAiB/B,EAAMgC,KAAKD,gBAC5BpB,MAAOX,EAAMgC,KAAKrB,SAGoB,CAAEF,cAA3BqB,CAAuCnC,GC5IhDsC,E,4MACFC,SAAW,WACP,OAAO,cAAC,IAAD,CAAUR,GAAG,Y,uDAEd,IAAD,OACL,OACE,eAAC,WAAD,WACE,eAAC,IAAD,WACE,sHACA,sBAAMR,KAAK,cAAciB,QAAQ,SAEnC,cAAC,IAAD,IACA,cAAC,EAAD,CAASpB,OAAQ,kBAAM,EAAKmB,mB,GAZjBL,aAkBRI","file":"static/js/25.7dcba0cf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n} from '../../../firebase/firebase.utils'\r\nimport { connect } from 'react-redux'\r\nimport { register } from '../../../redux/actions/auth'\r\n\r\nclass Content extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      is_superuser: false,\r\n      is_active: false,\r\n    }\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    const {\r\n      displayName,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n      is_superuser,\r\n      is_active,\r\n    } = this.state\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Пароли не совпадают!')\r\n      return\r\n    }\r\n    this.props.register(email, password, displayName, is_superuser, is_active)\r\n\r\n\r\n      this.setState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      })\r\n\r\n      if(!this.props.error){\r\n        this.props.action()\r\n      } else {\r\n        console.log(this.props.error.message)\r\n      }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state\r\n    return (\r\n      <div className='acr-auth-container'>\r\n        <div className='acr-auth-content'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className='auth-text'>\r\n              <h3>Регистрация на сайте</h3>\r\n              <p>\r\n                Для получения возможности добавлять объекты недвижимости на\r\n                сайт, зарегистрируйтесь и дождитесь подтверждения\r\n                администратора.\r\n              </p>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Фамилия, имя и отчество</label>\r\n              <input\r\n                type='text'\r\n                className='form-control form-control-light'\r\n                placeholder='Полное имя'\r\n                name='displayName'\r\n                onChange={this.handleChange}\r\n                value={displayName}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Адрес электронной почты</label>\r\n              <input\r\n                type='email'\r\n                className='form-control form-control-light'\r\n                placeholder='Email'\r\n                name='email'\r\n                onChange={this.handleChange}\r\n                value={email}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Пароль</label>\r\n              <input\r\n                type='password'\r\n                className='form-control form-control-light'\r\n                placeholder='Пароль'\r\n                name='password'\r\n                onChange={this.handleChange}\r\n                value={password}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Подтвердите пароль</label>\r\n              <input\r\n                type='password'\r\n                className='form-control form-control-light'\r\n                placeholder='Пароль еще раз'\r\n                name='confirmPassword'\r\n                onChange={this.handleChange}\r\n                value={confirmPassword}\r\n              />\r\n            </div>\r\n            <button type='submit' className='btn-custom secondary btn-block'>\r\n              Регистрация\r\n            </button>\r\n            <div className='auth-seperator'>\r\n              <span></span>\r\n            </div>\r\n\r\n            <p className='text-center mb-0'>\r\n              Уже зарегистрированы? <Link to='/login'>Войдите</Link>{' '}\r\n            </p>\r\n          </form>\r\n        </div>\r\n        <div\r\n          className='acr-auth-bg'\r\n          style={{ backgroundImage: `url('assets/img/coming-soon/1.jpg')` }}\r\n        ></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.auth.error,\r\n})\r\n\r\nexport default connect(mapStateToProps, { register })(Content)\r\n","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { Redirect } from 'react-router';\r\nimport Header from '../layouts/Headerfive';\r\nimport Content from '../sections/register/Content';\r\n\r\nclass Register extends Component {\r\n    redirect = () => {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n    render() {\r\n        return (\r\n          <Fragment>\r\n            <MetaTags>\r\n              <title>LuxRealAdria | Регистрация</title>\r\n              <meta name='description' content='#' />\r\n            </MetaTags>\r\n            <Header />\r\n            <Content action={() => this.redirect} />\r\n          </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;"],"sourceRoot":""}