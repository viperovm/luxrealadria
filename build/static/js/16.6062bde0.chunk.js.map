{"version":3,"sources":["redux/actions/listings.js","components/layouts/Loader.js","redux/actions/filters.js","components/layouts/Calculator.js","helper/helper.js","components/layouts/Shopsidebar.js","components/sections/listinglist/Content.js","components/pages/Listinglist.js"],"names":["setPrice","price","a","addDoc","collection","db","priceRef","id","console","log","error","getNumber","name","arr","q","query","getDocs","forEach","doc","push","number","data","setNumber","current","previous","parseInt","docRef","updateDoc","add_listing","propertyName","propertyDescription","propertyPurpose","propertyStatus","propertyType","propertyPrice","propertySpace","propertyVideo","propertyFeatures","propertyId","propertyBeds","propertyBaths","propertyCondition","propertyBuiltYear","urls","dispatch","type","ADD_LISTING_SUCCESS","payload","ADD_LISTING_FAIL","Loader","className","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","Component","get_all_regions","GET_ALL_REGIONS_SUCCESS","sort","b","GET_ALL_REGIONS_FAIL","get_all_statuses","GET_ALL_STATUSES_SUCCESS","GET_ALL_STATUSES_FAIL","get_price_range","arrOfObjs","map","item","n","range","lowest","highest","at","GET_PRICE_RANGE_SUCCESS","GET_PRICE_RANGE_FAIL","get_all_purposes","GET_ALL_PURPOSES_SUCCESS","GET_ALL_PURPOSES_FAIL","get_all_types","GET_ALL_TYPES_SUCCESS","Date","created","GET_ALL_TYPES_FAIL","get_beds","beds","GET_BEDS_SUCCESS","GET_BEDS_FAIL","get_baths","baths","GET_BATHS_SUCCESS","GET_BATHS_FAIL","numberWithSpaces","x","toString","replace","Shopsidebar","filters","useState","regionsValue","setRegionsValue","statusesValue","setStatusesValue","purposesValue","setPurposesValue","typesValue","setTypesValue","rangeValue","setRangeValue","bedsValue","setBedsValue","bathsValue","setBathsValue","priceValue","setPriceValue","searchFilter","setSearchFilter","action","target","value","length","counter","useEffect","regions","statuses","purposes","types","open","setOpen","onClick","Collapse","in","options","placeholder","onChange","class","min","max","step","bedstip","Tooltip","bathstip","areatip","connect","state","filterValue","items","currentPage","setCurrentPage","itemsPerPage","loading","setLoading","filter","setFilter","i","handleClick","event","paginationContent","closest","scrollIntoView","setTimeout","Number","getAttribute","indexOfLastitem","indexOfFirstitem","renderitems","slice","to","src","listimg","alt","star","sale","pending","rental","title","monthlyprice","text","OverlayTrigger","overlay","bathrooms","area","pageNumbers","Math","ceil","renderPagination","activeCondition","classNames","active","data-page","content","Header","Breadcrumb","breadcrumb","pagename"],"mappings":"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","file":"static/js/16.6062bde0.chunk.js","sourcesContent":["import {\n  collection,\n  addDoc,\n  doc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  getDoc,\n  updateDoc,\n} from 'firebase/firestore'\nimport {\n  auth,\n  createUserProfileDocument,\n  db,\n} from '../../firebase/firebase.utils'\nimport {\n  ADD_LISTING_SUCCESS,\n  ADD_LISTING_FAIL,\n  GET_ALL_LISTINGS_SUCCESS,\n  GET_ALL_LISTINGS_FAIL,\n  GET_LISTING_SUCCESS,\n  GET_LISTING_FAIL,\n  SORT_LISTING_SUCCESS,\n} from './types'\n\nconst setPrice = async price => {\n  const priceRef = await addDoc(collection(db, 'prices'), {\n    price: price,\n  })\n  if (priceRef && priceRef.id) {\n    console.log('Цена добавлена')\n  } else {\n    console.error('Ошибка добавления цены')\n  }\n}\n\nexport const getNumber = async name => {\n  let arr = []\n  const q = query(collection(db, name))\n  try {\n    const querySnapshot = await getDocs(q)\n    \n    querySnapshot.forEach(doc => {\n      arr.push({ number: doc.data().number, id: doc.id })\n    })\n  } catch (error) {\n    console.error(error)\n  }\n  return arr[0]\n}\n\nconst setNumber = async (name, current) => {\n  let previous = await getNumber(name)\n  if (parseInt(previous.number) < parseInt(current)) {\n    const docRef = doc(db, name, previous.id)\n    try {\n      await updateDoc(docRef, {\n        number: parseInt(current),\n      })\n      console.log(\n        `Количество ${\n          name === 'beds' ? 'спален' : name === 'baths' ? 'санузлов' : ''\n        } обновлено`\n      )\n    } catch (err) {\n      console.error(\n        `Ошибка при обновлении количества ${\n          name === 'beds' ? 'спален' : name === 'baths' ? 'санузлов' : ''\n        }: `,\n        err\n      )\n    }\n  }\n}\n\nexport const add_listing =\n  (\n    propertyName,\n    propertyDescription,\n    propertyPurpose,\n    propertyStatus,\n    propertyType,\n    propertyPrice,\n    propertySpace,\n    propertyVideo,\n    propertyFeatures,\n    propertyId,\n    propertyBeds,\n    propertyBaths,\n    propertyCondition,\n    propertyBuiltYear,\n    urls\n  ) =>\n  async dispatch => {\n    const docRef = await addDoc(collection(db, 'listings'), {\n      propertyName: propertyName,\n      propertyDescription: propertyDescription,\n      propertyPurpose: propertyPurpose,\n      propertyStatus: propertyStatus,\n      propertyType: propertyType,\n      propertyPrice: propertyPrice,\n      propertySpace: propertySpace,\n      propertyVideo: propertyVideo,\n      propertyFeatures: propertyFeatures,\n      propertyId: propertyId,\n      propertyBeds: propertyBeds,\n      propertyBaths: propertyBaths,\n      propertyCondition: propertyCondition,\n      propertyBuiltYear: propertyBuiltYear,\n      urls: urls,\n    })\n    if (docRef && docRef.id) {\n      setPrice(propertyPrice)\n      setNumber('beds', propertyBeds)\n      setNumber('baths', propertyBaths)\n\n      dispatch({\n        type: ADD_LISTING_SUCCESS,\n        payload: docRef,\n      })\n    } else {\n      dispatch({\n        type: ADD_LISTING_FAIL,\n        payload: 'При записи объекта произошла ошибка. Повторите попытку позже',\n      })\n    }\n  }\n\nexport const get_all_listings = () => async dispatch => {\n  const arr = []\n  const q = query(collection(db, 'listings'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arr.push(doc.data())\n    })\n\n    dispatch({\n      type: GET_ALL_LISTINGS_SUCCESS,\n      payload: arr,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_LISTINGS_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const get_listing = uid => async dispatch => {\n  const docRef = doc(db, 'listings', uid)\n  const docSnap = await getDoc(docRef)\n\n  if (docSnap.exists()) {\n    dispatch({\n      type: GET_LISTING_SUCCESS,\n      payload: docSnap.data(),\n    })\n  } else {\n    dispatch({\n      type: GET_LISTING_FAIL,\n      payload: 'Объект отсутствует',\n    })\n  }\n}\n\nexport const sort_listing =\n  (\n    propertyPurpose,\n    propertyStatus,\n    propertyType,\n    propertyPrice,\n    propertySpace,\n    propertyBeds,\n    propertyBaths\n  ) =>\n  async dispatch => {\n    const arr = []\n\n    if (propertyPurpose) {\n      arr.push({ propertyPurpose: propertyPurpose })\n    }\n\n    if (propertyStatus) {\n      arr.push({ propertyStatus: propertyStatus })\n    }\n\n    if (propertyType) {\n      arr.push({ propertyType: propertyType })\n    }\n\n    if (propertyPrice) {\n      arr.push({ propertyPrice: propertyPrice })\n    }\n\n    if (propertySpace) {\n      arr.push({ propertySpace: propertySpace })\n    }\n\n    if (propertyBeds) {\n      arr.push({ propertyBeds: propertyBeds })\n    }\n\n    if (propertyBaths) {\n      arr.push({ propertyBaths: propertyBaths })\n    }\n\n    dispatch({\n      type: SORT_LISTING_SUCCESS,\n      payload: arr,\n    })\n  }\n","import React, { Component } from 'react';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pagination-loader\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" style={{ margin: 'auto', background: '#fff', display: 'block', shapeRendering: 'auto' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n                    <g transform=\"translate(80,50)\">\r\n                        <g transform=\"rotate(0)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity={1}>\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                        <g transform=\"rotate(45)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.875\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(50,80)\">\r\n                        <g transform=\"rotate(90)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.75\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                        <g transform=\"rotate(135)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.625\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(20,50.00000000000001)\">\r\n                        <g transform=\"rotate(180)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.5\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                        <g transform=\"rotate(225)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.375\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(49.99999999999999,20)\">\r\n                        <g transform=\"rotate(270)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.25\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                        <g transform=\"rotate(315)\">\r\n                            <circle cx={0} cy={0} r={6} fill=\"#01bbbc\" fillOpacity=\"0.125\">\r\n                                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n                                <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import {\n  collection,\n  addDoc,\n  doc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  getDoc,\n} from 'firebase/firestore'\nimport { db } from '../../firebase/firebase.utils'\nimport {\n  ADD_REGION_SUCCESS,\n  ADD_REGION_FAIL,\n  GET_ALL_REGIONS_SUCCESS,\n  GET_ALL_REGIONS_FAIL,\n  ADD_STATUS_SUCCESS,\n  ADD_STATUS_FAIL,\n  GET_ALL_STATUSES_SUCCESS,\n  GET_ALL_STATUSES_FAIL,\n  GET_PRICE_RANGE_SUCCESS,\n  GET_PRICE_RANGE_FAIL,\n  ADD_PURPOSE_SUCCESS,\n  ADD_PURPOSE_FAIL,\n  GET_ALL_PURPOSES_SUCCESS,\n  GET_ALL_PURPOSES_FAIL,\n  ADD_TYPE_SUCCESS,\n  ADD_TYPE_FAIL,\n  GET_ALL_TYPES_SUCCESS,\n  GET_ALL_TYPES_FAIL,\n  GET_BEDS_SUCCESS,\n  GET_BEDS_FAIL,\n  GET_BATHS_SUCCESS,\n  GET_BATHS_FAIL,\n} from './types'\nimport { getNumber } from './listings'\n\nexport const get_all_filters = () => {\n  get_all_regions()\n  get_all_statuses()\n  get_price_range()\n  get_all_purposes()\n  get_all_types()\n  get_beds()\n  get_baths()\n}\n\nexport const add_region = regionName => async dispatch => {\n  const docRef = await addDoc(collection(db, 'locations'), {\n    regionName: regionName,\n  })\n  if (docRef && docRef.id) {\n    dispatch({\n      type: ADD_REGION_SUCCESS,\n      payload: docRef,\n    })\n  } else {\n    dispatch({\n      type: ADD_REGION_FAIL,\n      payload: 'При записи региона произошла ошибка. Повторите попытку позже',\n    })\n  }\n}\n\nexport const get_all_regions = () => async dispatch => {\n  const arr = []\n  const q = query(collection(db, 'locations'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arr.push(doc.data())\n    })\n\n    dispatch({\n      type: GET_ALL_REGIONS_SUCCESS,\n      payload: arr.sort(function (a, b) {\n        return a.name - b.name\n      }),\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_REGIONS_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const add_status = statusName => async dispatch => {\n  const docRef = await addDoc(collection(db, 'statuses'), {\n    statusName: statusName,\n  })\n  if (docRef && docRef.id) {\n    dispatch({\n      type: ADD_STATUS_SUCCESS,\n      payload: docRef,\n    })\n  } else {\n    dispatch({\n      type: ADD_STATUS_FAIL,\n      payload: 'При записи статуса произошла ошибка. Повторите попытку позже',\n    })\n  }\n}\n\nexport const get_all_statuses = () => async dispatch => {\n  const arr = []\n  const q = query(collection(db, 'statuses'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arr.push(doc.data())\n    })\n\n    dispatch({\n      type: GET_ALL_STATUSES_SUCCESS,\n      payload: arr,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_STATUSES_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const get_price_range = () => async dispatch => {\n  const arrOfObjs = []\n  const q = query(collection(db, 'prices'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arrOfObjs.push(doc.data())\n    })\n    let arr = []\n    arrOfObjs.map(item => {\n      let n = parseInt(item.price, 10)\n      arr.push(n)\n      return n\n    })\n\n    arr.sort(function (a, b) {\n      return a - b\n    })\n\n    let range = {\n      lowest: arr[0],\n      highest: arr.at(-1),\n    }\n\n    dispatch({\n      type: GET_PRICE_RANGE_SUCCESS,\n      payload: range,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_PRICE_RANGE_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const add_purpose = purposeName => async dispatch => {\n  const docRef = await addDoc(collection(db, 'purposes'), {\n    purpose: purposeName,\n  })\n  if (docRef && docRef.id) {\n    dispatch({\n      type: ADD_PURPOSE_SUCCESS,\n      payload: docRef,\n    })\n  } else {\n    dispatch({\n      type: ADD_PURPOSE_FAIL,\n      payload:\n        'При записи назначения произошла ошибка. Повторите попытку позже',\n    })\n  }\n}\n\nexport const get_all_purposes = () => async dispatch => {\n  const arr = []\n  const q = query(collection(db, 'purposes'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arr.push(doc.data())\n    })\n\n    dispatch({\n      type: GET_ALL_PURPOSES_SUCCESS,\n      payload: arr,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_PURPOSES_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const add_type = (typeName, typeIcon, typePicture) => async dispatch => {\n  const docRef = await addDoc(collection(db, 'types'), {\n    type: typeName,\n    icon: typeIcon,\n    picture: typePicture,\n  })\n  if (docRef && docRef.id) {\n    dispatch({\n      type: ADD_TYPE_SUCCESS,\n      payload: docRef,\n    })\n  } else {\n    dispatch({\n      type: ADD_TYPE_FAIL,\n      payload: 'При записи типа произошла ошибка. Повторите попытку позже',\n    })\n  }\n}\n\nexport const get_all_types = () => async dispatch => {\n  const arr = []\n  const q = query(collection(db, 'types'))\n  try {\n    const querySnapshot = await getDocs(q)\n    querySnapshot.forEach(doc => {\n      arr.push(doc.data())\n    })\n\n    dispatch({\n      type: GET_ALL_TYPES_SUCCESS,\n      payload: arr.sort(function (a, b) {\n        return new Date(a.created) - new Date(b.created)\n      }),\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_TYPES_FAIL,\n      payload: error,\n    })\n  }\n}\n\n\nexport const get_beds = () => async dispatch => {\n  try {\n    let beds = await getNumber('beds')\n    dispatch({\n      type: GET_BEDS_SUCCESS,\n      payload: beds.number,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_BEDS_FAIL,\n      payload: error,\n    })\n  }\n}\n\nexport const get_baths = () => async dispatch => {\n  try {\n    let baths = await getNumber('baths')\n    dispatch({\n      type: GET_BATHS_SUCCESS,\n      payload: baths.number,\n    })\n  } catch (error) {\n    dispatch({\n      type: GET_BATHS_FAIL,\n      payload: error,\n    })\n  }\n}","import React, { Component } from 'react';\r\n\r\nclass Calculator extends Component {\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Total Amount\" name=\"total\"  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Down Payment\" name=\"down-p\"  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Interest Rate\" name=\"interest\"  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Loan Term\" name=\"loan-term\"  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control\" name=\"cycle\">\r\n                        <option value=\"Daily\">Daily</option>\r\n                        <option value=\"Monthly\">Monthly</option>\r\n                        <option value=\"Yearly\">Yearly</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn-custom btn-block\" name=\"button\">Calculate</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","export function processRatingStars(rating) {\r\n  let stars = []\r\n  for (let i = 0; i < 5; i++) {\r\n    stars.push(<i className='fas fa-star' key={i}></i>)\r\n  }\r\n  if (rating && rating > 0) {\r\n    for (let i = 0; i <= rating - 1; i++) {\r\n      stars[i] = <i className='fas fa-star active' key={i}></i>\r\n    }\r\n  }\r\n  return stars\r\n}\r\n\r\nexport const numberWithSpaces = x => {\r\n  if(x){\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Calculator from './Calculator'\r\nimport Select2 from 'react-select2-wrapper'\r\nimport listing from '../../data/listings.json'\r\nimport {\r\n  locationlist,\r\n  statuslist,\r\n  pricerangelist,\r\n  bedslist,\r\n  bathroomslist,\r\n  typelist,\r\n} from '../../data/select.json'\r\nimport { Collapse } from 'react-bootstrap'\r\n\r\nimport { numberWithSpaces } from '../../helper/helper'\r\n\r\nconst Shopsidebar = ({ filters}) => {\r\n\r\n\r\n  const [regionsValue, setRegionsValue] = useState([])\r\n  const [statusesValue, setStatusesValue] = useState([])\r\n  const [purposesValue, setPurposesValue] = useState([])\r\n  const [typesValue, setTypesValue] = useState([])\r\n  const [rangeValue, setRangeValue] = useState(null)\r\n  const [bedsValue, setBedsValue] = useState([])\r\n  const [bathsValue, setBathsValue] = useState([])\r\n\r\n  const [priceValue, setPriceValue] = useState(null)\r\n\r\n  const [searchFilter, setSearchFilter] = useState([])\r\n  const [values, setValues] = useState([])\r\n\r\nconst action = ({target}) => {\r\n    if (target && target.value) {\r\n         console.log(1, target.value)\r\n        if (searchFilter.length === 0){\r\n            console.log(2)\r\n            setSearchFilter([{ name: target.name, value: target.value }])\r\n            console.log(3)\r\n        }else{\r\n\r\n            let counter = 0\r\n            console.log(4, counter)\r\n            setSearchFilter(searchFilter.map(item => {\r\n              if (item.name === target.name) {\r\n                counter++\r\n                console.log(5, counter)\r\n                return (item = { name: target.name, value: target.value })\r\n              } else {\r\n                console.log(6, item)\r\n                return item\r\n              }\r\n            }))\r\n            if (counter === 0) {\r\n                console.log(7)\r\n              setSearchFilter([\r\n                ...searchFilter,\r\n                { name: target.name, value: target.value },\r\n              ])\r\n              counter = 0\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\nconsole.log(searchFilter)\r\n\r\n  useEffect(() => {\r\n    if (filters) {\r\n      setRegionsValue(filters.regions)\r\n      setStatusesValue(filters.statuses)\r\n      setPurposesValue(filters.purposes)\r\n      setTypesValue(filters.types)\r\n      setRangeValue(filters.range)\r\n      setBedsValue(filters.beds)\r\n      setBathsValue(filters.baths)\r\n    }\r\n  }, [filters])\r\n\r\n  const handleRange = ({target}) => {\r\n    setPriceValue(target.value)\r\n  }\r\n\r\n  const [open, setOpen] = useState(true)\r\n  return (\r\n    <div className='sidebar sidebar-left'>\r\n      <div className='sidebar-widget'>\r\n        <div\r\n          className='acr-collapse-trigger acr-custom-chevron-wrapper'\r\n          onClick={() => setOpen(!open)}\r\n        >\r\n          <h5>Фильтр объектов</h5>\r\n          <div className='acr-custom-chevron'>\r\n            <span />\r\n            <span />\r\n          </div>\r\n        </div>\r\n        <Collapse in={open}>\r\n          <div className='acr-collapsable'>\r\n            <div className='acr-filter-form'>\r\n              <form>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Регион: </label>\r\n                  <Select2\r\n                    // value={values.propertyRegion}\r\n                    name='propertyRegion'\r\n                    data={regionsValue && ['Любой регион', ...regionsValue]}\r\n                    options={{\r\n                      placeholder: 'Любой регион',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Назначение: </label>\r\n                  <Select2\r\n                    value={values.propertyPurpose}\r\n                    name='propertyPurpose'\r\n                    data={\r\n                      purposesValue && ['Любое назначение', ...purposesValue]\r\n                    }\r\n                    options={{\r\n                      placeholder: 'Любое назначение',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Спальни: </label>\r\n                  <Select2\r\n                    value={values.propertyBeds}\r\n                    name='propertyBeds'\r\n                    data={bedsValue && ['Любое кол-во', ...bedsValue]}\r\n                    options={{\r\n                      placeholder: 'Любое кол-во',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Санузлы: </label>\r\n                  <Select2\r\n                    value={values.propertyBaths}\r\n                    name='propertyBaths'\r\n                    data={bathsValue && ['Любое кол-во', ...bathsValue]}\r\n                    options={{\r\n                      placeholder: 'Любое кол-во',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Тип: </label>\r\n                  <Select2\r\n                    value={values.propertyType}\r\n                    name='propertyType'\r\n                    data={typesValue && ['Любой тип', ...typesValue]}\r\n                    options={{\r\n                      placeholder: 'Любой тип',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <label>Статус: </label>\r\n                  <Select2\r\n                    value={values.propertyStatus}\r\n                    name='propertyStatus'\r\n                    data={statusesValue && ['Любой статус', ...statusesValue]}\r\n                    options={{\r\n                      placeholder: 'Любой статус',\r\n                    }}\r\n                    onChange={action}\r\n                  />\r\n                </div>\r\n                <div className='acr-custom-select form-group'>\r\n                  <div className='d-flex justify-content-between'>\r\n                    <div>\r\n                      От €{numberWithSpaces(rangeValue && rangeValue.lowest)}\r\n                    </div>\r\n                    <div>До €{numberWithSpaces(priceValue)}</div>\r\n                  </div>\r\n                  <input\r\n                    type='range'\r\n                    name='propertyPrice'\r\n                    class='form-range'\r\n                    min={rangeValue && rangeValue.lowest}\r\n                    max={rangeValue && rangeValue.highest}\r\n                    step='10000'\r\n                    id='customRange3'\r\n                    value={priceValue}\r\n                    onChange={handleRange}\r\n                  ></input>\r\n                </div>\r\n                <button\r\n                  type='submit'\r\n                  className='btn-block btn-custom'\r\n                  name='button'\r\n                >\r\n                  Применить\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shopsidebar\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { OverlayTrigger, Tooltip, Dropdown, NavLink } from 'react-bootstrap'\r\nimport Sidebar from '../../layouts/Shopsidebar'\r\nimport listing from '../../../data/listings.json'\r\nimport classNames from 'classnames'\r\nimport Loader from '../../layouts/Loader'\r\nimport { connect } from 'react-redux'\r\n\r\nconst gallerytip = <Tooltip>Gallery</Tooltip>\r\nconst gridtip = <Tooltip>Grid</Tooltip>\r\nconst listtip = <Tooltip>List</Tooltip>\r\nconst maptip = <Tooltip>Map</Tooltip>\r\nconst bedstip = <Tooltip>Спальни</Tooltip>\r\nconst bathstip = <Tooltip>Санузлы</Tooltip>\r\nconst areatip = <Tooltip>Площадь</Tooltip>\r\n\r\nconst Content = ({\r\n  regions,\r\n  statuses,\r\n  purposes,\r\n  types,\r\n  range,\r\n  beds,\r\n  baths,\r\n}) => {\r\n\r\n  const [filterValue, setFilterValue] = useState([])\r\n\r\n\r\n  const [items, setItems] = useState([])\r\n  const [currentPage, setCurrentPage] = useState([])\r\n  const [itemsPerPage, setItemsPerPage] = useState([])\r\n  const [loading, setLoading] = useState([])\r\n\r\n  const [regionsValue, setRegionsValue] = useState([])\r\n  const [statusesValue, setStatusesValue] = useState([])\r\n  const [purposesValue, setPurposesValue] = useState([])\r\n  const [typesValue, setTypesValue] = useState([])\r\n  const [rangeValue, setRangeValue] = useState(null)\r\n  const [bedsValue, setBedsValue] = useState([])\r\n  const [bathsValue, setBathsValue] = useState([])\r\n\r\n  const [filter, setFilter] = useState({})\r\n\r\n  const [priceValue, setPriceValue] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    if (regions) {\r\n      let arr = []\r\n      regions.map(item => arr.push(item.name))\r\n      setRegionsValue(arr)\r\n      setFilter({...filter, regions: arr})\r\n    }\r\n  }, [regions])\r\n\r\n  useEffect(() => {\r\n    if (statuses) {\r\n      let arr = []\r\n      statuses.map(item => arr.push(item.name))\r\n      setStatusesValue(arr)\r\n      setFilter({ ...filter, statuses: arr })\r\n    }\r\n  }, [statuses])\r\n\r\n  useEffect(() => {\r\n    if (purposes) {\r\n      let arr = []\r\n      purposes.map(item => arr.push(item.name))\r\n      setPurposesValue(arr)\r\n      setFilter({ ...filter, purposes: arr })\r\n    }\r\n  }, [purposes])\r\n\r\n  useEffect(() => {\r\n    if (types) {\r\n      let arr = []\r\n      types.map(item => arr.push(item.name))\r\n      setTypesValue(arr)\r\n      setFilter({ ...filter, types: arr })\r\n    }\r\n  }, [types])\r\n\r\n  useEffect(() => {\r\n    if (range) {\r\n      setRangeValue(range)\r\n      setFilter({ ...filter, range: range })\r\n    }\r\n  }, [range])\r\n\r\n  useEffect(() => {\r\n    if (beds) {\r\n      let arr = []\r\n      for (let i = parseInt(beds); i >= 1; i--) {\r\n        arr.push(i)\r\n      }\r\n\r\n      setBedsValue(\r\n        arr.sort(function (a, b) {\r\n          return b - a\r\n        })\r\n      )\r\n      setFilter({ ...filter, beds: arr })\r\n    }\r\n  }, [beds])\r\n\r\n  useEffect(() => {\r\n    if (baths) {\r\n      let arr = []\r\n      for (let i = parseInt(baths); i >= 1; i--) {\r\n        arr.push(i)\r\n      }\r\n\r\n      setBathsValue(\r\n        arr.sort(function (a, b) {\r\n          return b - a\r\n        })\r\n      )\r\n      setFilter({ ...filter, baths: arr })\r\n    }\r\n  }, [baths])\r\n\r\n  const handleRange = e => {\r\n    setPriceValue(e.target.value)\r\n  }\r\n\r\n  const handleClick = event => {\r\n    let paginationContent = event.target.closest('.pagination-content')\r\n\r\n    if (paginationContent) {\r\n      paginationContent.scrollIntoView()\r\n    }\r\n\r\n    setLoading(true)\r\n\r\n    setTimeout(() => {\r\n      setCurrentPage(Number(event.target.getAttribute('data-page')))\r\n      setLoading(false)\r\n    }, 2000)\r\n  }\r\n\r\n  // Logic for displaying items\r\n  const indexOfLastitem = currentPage * itemsPerPage\r\n  const indexOfFirstitem = indexOfLastitem - itemsPerPage\r\n  const currentitems = items.slice(indexOfFirstitem, indexOfLastitem)\r\n\r\n  const renderitems = currentitems.map((item, i) => {\r\n    return (\r\n      <div key={i} className='listing listing-list'>\r\n        <div className='listing-thumbnail'>\r\n          <Link to='/listing/1'>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/' + item.listimg}\r\n              alt='listing'\r\n            />\r\n          </Link>\r\n          <div className='listing-badges'>\r\n            {item.star === true ? (\r\n              <span className='listing-badge featured'>\r\n                {' '}\r\n                <i className='fas fa-star' />{' '}\r\n              </span>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {item.sale === true ? (\r\n              <span className='listing-badge sale'>On Sale</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {item.pending === true ? (\r\n              <span className='listing-badge pending'> Pending</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {item.rental === true ? (\r\n              <span className='listing-badge rent'> Rental</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='listing-body'>\r\n          <h5 className='listing-title'>\r\n            {' '}\r\n            <Link to='/listing/1' title={item.title}>\r\n              {item.title}\r\n            </Link>{' '}\r\n          </h5>\r\n          <span className='listing-price'>\r\n            €{item.monthlyprice} <span>/month</span>{' '}\r\n          </span>\r\n          <p className='listing-text'>{item.text}</p>\r\n          <div className='acr-listing-icons'>\r\n            <OverlayTrigger overlay={bedstip}>\r\n              <div className='acr-listing-icon'>\r\n                <i className='flaticon-bedroom' />\r\n                <span className='acr-listing-icon-value'>{item.beds}</span>\r\n              </div>\r\n            </OverlayTrigger>\r\n            <OverlayTrigger overlay={bathstip}>\r\n              <div className='acr-listing-icon'>\r\n                <i className='flaticon-bathroom' />\r\n                <span className='acr-listing-icon-value'>{item.bathrooms}</span>\r\n              </div>\r\n            </OverlayTrigger>\r\n            <OverlayTrigger overlay={areatip}>\r\n              <div className='acr-listing-icon'>\r\n                <i className='flaticon-ruler' />\r\n                <span className='acr-listing-icon-value'>{item.area}</span>\r\n              </div>\r\n            </OverlayTrigger>\r\n          </div>\r\n          <div className='listing-gallery-wrapper'>\r\n            <Link to='/listing/1' className='btn-custom btn-sm secondary'>\r\n              Подробнее\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n  // Logic for displaying page numbers\r\n  const pageNumbers = []\r\n  for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\r\n    pageNumbers.push(i)\r\n  }\r\n  const renderPagination = pageNumbers.map(number => {\r\n    const activeCondition = currentPage === number ? 'active' : ''\r\n    return (\r\n      <Fragment key={number}>\r\n        {pageNumbers.length > 1 ? (\r\n          <li className={classNames('page-item', { active: activeCondition })}>\r\n            <Link\r\n              className='page-link'\r\n              to='#'\r\n              data-page={number}\r\n              onClick={handleClick}\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Fragment>\r\n    )\r\n  })\r\n  return (\r\n    <div className='section pagination-content'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          {/* Sidebar Start */}\r\n          <div className='col-lg-4'>\r\n            <Sidebar\r\n            filters={filter}\r\n            // action={}\r\n            />\r\n          </div>\r\n          {/* Sidebar End */}\r\n          {/* Posts Start */}\r\n          <div className='col-lg-8'>\r\n            {/* Controls Start */}\r\n            <div className='acr-global-listing-controls'>\r\n              <div className='acr-listing-active-filters'>\r\n                {filterValue &&\r\n                  filterValue.map((item, i) => (\r\n                    <Link key={i} to='#'>\r\n                      <div className='close-btn close-dark'>\r\n                        <span />\r\n                        <span />\r\n                      </div>\r\n                      {item.filter}: {item.value}\r\n                    </Link>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            {/* Controls End */}\r\n            <div className='row'>\r\n              {/* Listing Start */}\r\n              {loading === false ? renderitems : <Loader />}\r\n              {/* Listing End */}\r\n            </div>\r\n            {/* Pagination Start */}\r\n            {pageNumbers.length > 1 ? (\r\n              <ul className='pagination'>\r\n                {/* Prev */}\r\n                {/* to show previous, we need to be on the 2nd or more page */}\r\n                {pageNumbers.length > 1 && currentPage !== 1 ? (\r\n                  <li className='page-item'>\r\n                    <Link\r\n                      className='page-link'\r\n                      to='#'\r\n                      data-page={currentPage - 1}\r\n                      onClick={handleClick}\r\n                    >\r\n                      <i className='fas fa-chevron-left' />\r\n                    </Link>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {/* Prev */}\r\n                {renderPagination}\r\n                {/* Next */}\r\n                {/* to show next, we should not be on the last page */}\r\n                {pageNumbers.length > 1 &&\r\n                currentPage !== pageNumbers.length ? (\r\n                  <li className='page-item'>\r\n                    <Link\r\n                      className='page-link'\r\n                      to='#'\r\n                      data-page={parseInt(currentPage + 1)}\r\n                      onClick={handleClick}\r\n                    >\r\n                      <i className='fas fa-chevron-right' />\r\n                    </Link>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {/* Next */}\r\n              </ul>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {/* Pagination End */}\r\n          </div>\r\n          {/* Posts End */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  regions: state.filters.regions,\r\n  statuses: state.filters.statuses,\r\n  purposes: state.filters.purposes,\r\n  types: state.filters.types,\r\n  range: state.filters.range,\r\n  beds: state.filters.beds,\r\n  baths: state.filters.baths,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Content)\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Header from '../layouts/Header';\r\nimport Breadcrumb from '../layouts/Breadcrumb';\r\nimport Footer from '../layouts/Footerthree'\r\nimport Content from '../sections/listinglist/Content';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  get_all_regions,\r\n  get_all_statuses,\r\n  get_price_range,\r\n  get_all_purposes,\r\n  get_all_types,\r\n  get_beds,\r\n  get_baths,\r\n} from '../../redux/actions/filters'\r\n\r\nconst Listinglist = ({\r\n  get_all_regions,\r\n  get_all_statuses,\r\n  get_price_range,\r\n  get_all_purposes,\r\n  get_all_types,\r\n  get_beds,\r\n  get_baths,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    get_all_regions()\r\n    get_all_statuses()\r\n    get_price_range()\r\n    get_all_purposes()\r\n    get_all_types()\r\n    get_beds()\r\n    get_baths()\r\n  }, [])\r\n  \r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>LuxRealAdria | Объекты недвижимости</title>\r\n        <meta name='description' content='#' />\r\n      </MetaTags>\r\n      <Header />\r\n      <Breadcrumb breadcrumb={{ pagename: 'Объекты недвижимости' }} />\r\n      <Content />\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connect(null, {\r\n  get_all_regions,\r\n  get_all_statuses,\r\n  get_price_range,\r\n  get_all_purposes,\r\n  get_all_types,\r\n  get_beds,\r\n  get_baths,\r\n})(Listinglist)"],"sourceRoot":""}